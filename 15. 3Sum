class Solution(object):
    def threeSum(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        combos = []
        nums.sort() #so that we can apply Two Sum II technique **
        for i in range(len(nums)):
            l = i + 1
            r = len(nums) - 1
            while l < r: #not <= since we dont consider when l == r anyways (no dupes in sum) **
                if nums[l] + nums[r] + nums[i] < 0: #sum too low
                    l += 1
                elif nums[l] + nums[r] + nums[i] > 0:  #sum too high
                    r -= 1
                else: # equals 0
                    candidate = [nums[i], nums[l], nums[r]]
                    if candidate not in combos: #easy but not good time to check if exists (no dupes in answer) **
                        combos.append(candidate)
                    l += 1 #always increment up so we dont have infinite loop
        return combos

                
