#O(n^2)
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        ans = []
        for i in range(len(nums)):
            for j in range(len(nums)):
                if i != j and nums[i] + nums[j] == target:
                    ans.append(i)
                    ans.append(j)
                    return ans
        return ans



#O(n)
class Solution(object):
    def twoSum(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: List[int]
        """
        d = {}
        for i in range(len(nums)):
            req = target - nums[i]
            if nums[i] not in d:
                d[nums[i]] = i
            if req in d and d[req] != i:
                return [i, d[req]]
            
