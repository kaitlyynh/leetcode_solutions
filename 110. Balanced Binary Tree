# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isBalanced(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        def helper(root):
            if root is None:
                return [True, 0]
            else:
                l = helper(root.left)
                r = helper(root.right)
                return [l[0] and r[0] and abs((l[1] + 1) - (r[1] + 1)) <= 1, max(l[1] + 1, r[1] + 1)]
        return helper(root)[0]
