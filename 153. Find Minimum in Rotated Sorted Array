class Solution(object):
    def findMin(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        min_val = nums[0]
        l = 0
        r = len(nums) - 1
        while l <= r:
            mid = (l + r) // 2
            if nums[l] < nums[mid] and nums[l] < min_val:
                return nums[l]
            min_val = min(min_val, nums[mid])
            if nums[mid] >= nums[l]: 
                l = mid + 1
            else: # nums[mid] < nums[l] 4 5 1 2 3
                r = mid - 1
        return min_val

# left portion has higher values than right portion
# compare middle point to left pointer to determine what portion you are in (if left is the larger one or is it the right)
# if in a sorted portion and the left is smallest set it as min
