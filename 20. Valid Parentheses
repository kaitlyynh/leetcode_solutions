class Solution(object):
    def isValid(self, s):
        """
        :type s: str
        :rtype: bool
        """
        opens = '([{'
        closes = ')]}'
        pairs = {'(':')', '[':']', '{':'}'}
        count = 0
        my_stack = []
        while count < len(s):
            if s[count] in opens:
                my_stack.append(s[count])
            elif s[count] in closes:
                if len(my_stack) == 0:
                    return False
                compare = my_stack.pop()
                if not pairs[compare] == s[count]:
                    return False
            count += 1
        return len(my_stack) == 0
        
            
